version: '3.8'

networks:
  web:
    external: true

volumes:
  traefik: { driver: local }

services:
  traefik:
    image: docker.io/traefik:${TRAEFIK_RELEASE:-v2.10.7}
    restart: always
    command:
     - --api.insecure=false
     - --providers.docker=true
     - --providers.docker.exposedbydefault=false
     - --entrypoints.web.address=:80
     - --entrypoints.web.http.redirections.entryPoint.to=https
     - --entrypoints.web.http.redirections.entryPoint.scheme=https
     - --entrypoints.https.address=:443
     - --certificatesresolvers.le.acme.tlschallenge=true
     - --certificatesresolvers.le.acme.email=${LETSENCRYPT_EMAIL?need email for cert expiry notifications}
     - --certificatesresolvers.le.acme.storage=/letsencrypt/acme.json
    ports:
      - 80:80
      - 443:443
    volumes:
      - traefik:/letsencrypt:rw
      - /run/docker.sock:/var/run/docker.sock:ro
    networks:
      - web
  voicevox-api:
    env_file:
      - .env
    image: voicevox/voicevox_engine:cpu-ubuntu20.04-0.16.0
    restart: always
    command: "gosu user /opt/python/bin/python3 ./run.py --voicelib_dir /opt/voicevox_core/ --runtime_dir /opt/onnxruntime/lib --host 0.0.0.0 --enable_cancellable_synthesis --cpu_num_threads ${CPU_NUM_THREADS}"
    expose:
      - "50021"
    networks:
      - web
    labels:
      traefik.enable: "true"
      traefik.http.routers.voicevox-api-1.rule: Host(`${API_HOST}`)
      traefik.http.routers.voicevox-api-1.tls: "true"
      traefik.http.routers.voicevox-api-1.entrypoints: https
      traefik.http.routers.voicevox-api-1.tls.certresolver: le
      traefik.http.routers.voicevox-api-1.middlewares: auth
      traefik.http.middlewares.auth.basicauth.users: ${PASSWORD}
      traefik.http.services.voicevox-api-1.loadbalancer.server.port: "50021"
